# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: citruswebsocket
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: citrus
service: CitrusWebsocket

provider:
    name: aws
    runtime: nodejs22.x
    region: us-east-1
    environment:
        userTable: ${self:custom.userTable}
        locationTable: ${self:custom.locationTable}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
          Resource: '*'
    
custom:
    userTable: CitrusUsers
    locationTable: CitrusLocations
    friendsTable: CitrusFriends

functions:
    websocket-connect:
        handler: lambdas/websockets/connect.handler
        events:
            - websocket:
                route: $connect
    websocket-disconnect:
        handler: lambdas/websockets/disconnect.handler
        events:
            - websocket:
                route: $disconnect
    websocket-default:
        handler: lambdas/websockets/default.handler
        events:
            - websocket:
                route: $default
    websocket-message:
        handler: lambdas/websockets/message.handler
        events:
            - websocket:
                route: message
    websocket-location:
        handler: lambdas/websockets/sendLocation.handler
        events:
            - websocket:
                route: location
resources:
    Resources:
        CitrusUsersTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.userTable}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        CitrusLocationsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.locationTable}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        CitrusFriendsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.friendsTable}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5